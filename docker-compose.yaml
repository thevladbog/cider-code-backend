services:
  postgres-stable:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /opt/pgdata/stable:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  postgres-beta:
    image: postgres:17-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - /opt/pgdata/beta:/var/lib/postgresql/data
    networks:
      - backend
    restart: unless-stopped

  traefik:
    image: traefik:v3.4.0
    command:
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.websecure.address=:443'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge=true'
      - '--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web'
      - '--certificatesresolvers.letsencrypt.acme.email=hello@bottlecode.app'
      - '--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json'
      - '--log.level=INFO'
    ports:
      - '80:80'
      - '443:443'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik_letsencrypt:/letsencrypt
    networks:
      - backend
      - proxy
    restart: unless-stopped

  app-stable:
    image: cr.yandex/${YCR_REGISTRY_ID}/bottlecode-backend:latest
    depends_on:
      - postgres-stable
      - traefik
    environment:
      NODE_ENV: production
    env_file:
      - .env.stable
    expose:
      - '3033'
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.redirect-https.redirectScheme.scheme=https
      - traefik.http.middlewares.redirect-https.redirectScheme.permanent=true
      - traefik.http.routers.app-stable.rule=Host(`api.bottlecode.app`)
      - traefik.http.routers.app-stable.entrypoints=websecure
      - traefik.http.routers.app-stable.tls.certresolver=letsencrypt
      - traefik.http.services.app-stable.loadbalancer.server.port=3033
    networks:
      - backend
      - proxy
    restart: unless-stopped

  app-beta:
    image: cr.yandex/${YCR_REGISTRY_ID}/bottlecode-backend:beta
    depends_on:
      - postgres-beta
      - traefik
    environment:
      NODE_ENV: beta
    env_file:
      - .env.beta
    expose:
      - '3035'
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.redirect-https.redirectScheme.scheme=https
      - traefik.http.middlewares.redirect-https.redirectScheme.permanent=true
      - traefik.http.routers.app-beta.rule=Host(`beta.api.bottlecode.app`)
      - traefik.http.routers.app-beta.entrypoints=websecure
      - traefik.http.routers.app-beta.tls.certresolver=letsencrypt
      - traefik.http.services.app-beta.loadbalancer.server.port=3035
    networks:
      - backend
      - proxy
    restart: unless-stopped

networks:
  backend:
  proxy:

volumes:
  traefik_letsencrypt:
